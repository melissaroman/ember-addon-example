const getEnvVariables = require('./get-env-variables');

function optForDeployTarget(options = {}) {
  // If no target, return null value.
  const { tflyEnvironment, appName } = getEnvVariables();

  if (!tflyEnvironment || !options) {
    return options ? options['default'] : null;
  }

  const tflyEnvironmentUppercase = tflyEnvironment.toUpperCase();

  // Filter keys by ones that _might_ be a match
  const keys = Object.keys(options).filter((key) => {
    const upperKey = key.toUpperCase();

    // If not a glob pattern, do simple match.
    if (upperKey.indexOf('$') === -1) {
      return upperKey === tflyEnvironmentUppercase;
    }

    const regex = new RegExp(upperKey.replace('$', '.+'), 'i');

    return regex.test(tflyEnvironmentUppercase);
  });

  // Sort the keys by order of priority
  keys.sort((a, b) => {
    return -1 * a.indexOf('$') * b.indexOf('$');
  });

  // Return the first found key.
  const matchedKey = keys[0] || 'default';
  const matchedVal = options[matchedKey];

  return typeof matchedVal === 'function' ? matchedVal(tflyEnvironment, appName) : matchedVal;
}

optForDeployTarget.TFLY_STAGING = 'stage$';
optForDeployTarget.TFLY_PRODUCTION = 'prod$';
optForDeployTarget.TFLY_DEV = 'dev$';

module.exports = optForDeployTarget;
