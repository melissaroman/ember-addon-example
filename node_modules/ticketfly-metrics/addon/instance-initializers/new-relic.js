// Lovingly reused from `https://github.com/sir-dunxalot/ember-new-relic/blob/master/addon/instance-initializers/new-relic.js`
import Ember from 'ember';
import { log } from 'ember-debug';
import get from 'ember-metal/get';
import { isNone } from 'ember-utils';
import RSVP from 'rsvp';

export function initialize() {
  const { NREUM } = window;

  if (!NREUM) {
    return;
  }

  function mustIgnoreError(error) {
    // Ember 2.X seems to not catch `TransitionAborted` errors caused by regular redirects. We don't want these errors to show up in NewRelic so we have to filter them ourselfs.
    // Once the issue https://github.com/emberjs/ember.js/issues/12505 is resolved we can remove this ignored error.
    if (isNone(error)) {
      return false;
    }
    const errorName = get(error, 'name');
    
    return errorName === 'TransitionAborted';
  }

  function handleError(error) {
    if (mustIgnoreError(error)) {
      return;
    }

    try {
      NREUM.noticeError(error);
    } catch (e) {
      // Ignore
    }

    if (error && error.stack) {
      log(error.stack);
    }
  }

  function generateError(cause, stack) {
    const error = new Error(cause);

    error.stack = stack;

    return error;
  }

  Ember.onerror = handleError;

  RSVP.on('error', handleError);

  Ember.Logger.error = function(message, cause, stack) {
    handleError(generateError(cause, stack));
  };
}

export default {
  name: 'new-relic',
  initialize
};

