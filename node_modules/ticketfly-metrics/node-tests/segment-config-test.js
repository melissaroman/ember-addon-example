const assert = require('assert');
const configSegment = require('../lib/segment-config');

describe('segment config tests', function() {
  it('if this is a test, configure the `SegmentStub`', function() {
    env(null);
    const [result] = configSegment('test', {});
    assert.deepEqual(result, {
      name: 'SegmentStub',
      environments: ['all'],
      config: {}
    });
  });

  it('if this is a test, configure the `SegmentStub` even if ENV present', function() {
    env('dev14');
    const [result] = configSegment('test', {});
    assert.deepEqual(result, {
      name: 'SegmentStub',
      environments: ['all'],
      config: {}
    });
  });

  it('if there is no key for the `tflyEnvironment`, return no configs', function() {
    env('dev14');
    const result = configSegment('production', {});
    assert.deepEqual(result, []);
  });

  it('gets Segment config if `tflyEnvironment` key is present', function() {
    env('dev14');
    const [result] = configSegment('production', {
      segmentKeys: {
        dev14: 'test1234'
      }
    });

    assert.deepEqual(result, {
      name: 'Segment',
      environments: ['production'],
      config: { key: 'test1234' }
    });
  });
});

function env(tflyEnv) {
  process.env.TFLY_DEPLOY_TARGET = tflyEnv;
}
