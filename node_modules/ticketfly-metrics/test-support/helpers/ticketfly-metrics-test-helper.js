import Test from 'ember-test';
import get from 'ember-metal/get';

const { keys } = Object;

export default Test.registerHelper('queryMetrics', function(app, type) {
  const segmentStub = getSegmentStub(app);
  const args = get(segmentStub, `${type}.args`) || [];

  // Flatten the args. 
  const flatArgs = args.map(([record]) => record);

  return new MetricsQueryResult(flatArgs);
});

function getSegmentStub(app) {
  const metrics = app.__container__.lookup('service:metrics');
  return get(metrics, '_adapters.SegmentStub');
}

class MetricsQueryResult {
  constructor(results) {
    this._results = results || [];
  }

  where(query) {
    const filtered = this._results.filter((record) => {
      return keys(query).every((key) => {
        return query[key] === record[key];
      });
    });
    
    return new MetricsQueryResult(filtered);
  }

  get length() {
    return this._results.length;
  }

  get first() {
    return this._results[0];
  }

  get last() {
    return this._results[this._results.length - 1];
  }
}
